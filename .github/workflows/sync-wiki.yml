name: Sync Documentation to Wiki

on:
  push:
    branches: [main]
    paths: ['docs/**', 'user-docs/**']
  workflow_dispatch:

jobs:
  sync-wiki:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Checkout wiki repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki/
          token: ${{ secrets.WIKI_TOKEN || secrets.GITHUB_TOKEN }}
          
      - name: Sync docs to wiki
        run: |
          # Remove old wiki content (except .git)
          find wiki/ -type f -name "*.md" -delete
          
          # Copy docs to wiki (if docs exists)
          if [ -d "docs" ]; then
            cp -r docs/* wiki/
          fi
          
          # Copy user-docs to wiki (if user-docs exists)  
          if [ -d "user-docs" ]; then
            mkdir -p wiki/user-docs
            cp -r user-docs/* wiki/user-docs/
          fi
          
          # Rename main README to Home (wiki homepage)
          if [ -f "wiki/README.md" ]; then
            mv wiki/README.md wiki/Home.md
          fi
          
          # Intelligent conversion of markdown links to wiki format
          echo "Converting internal links to wiki format..."
          
          # Create conversion script
          cat > convert-links.py << 'PYTHON_EOF'
          import os
          import re
          import glob
          
          # Mapping of file paths to wiki page names
          file_to_wiki = {
              'getting-started/installation.md': 'getting-started-installation',
              'architecture/cms.md': 'architecture-cms', 
              'frontend/architecture.md': 'frontend-architecture',
              'frontend/build-system.md': 'frontend-build-system',
              'frontend/styling.md': 'frontend-styling',
              'api/README.md': 'api-README',
              'migration/wordpress.md': 'migration-wordpress',
              '../user-docs/README.md': 'user-docs-README',
              'user-docs/README.md': 'user-docs-README',
              '../user-docs/getting-started/first-login.md': 'user-docs-getting-started-first-login',
              'user-docs/getting-started/first-login.md': 'user-docs-getting-started-first-login'
          }
          
          def convert_links(content):
              # Convert markdown links [text](path.md) to wiki links [[text|page-name]]
              def replace_link(match):
                  text = match.group(1)
                  path = match.group(2)
                  
                  # Remove leading dots and slashes
                  clean_path = path.lstrip('./')
                  
                  # Look up wiki page name
                  if clean_path in file_to_wiki:
                      wiki_page = file_to_wiki[clean_path]
                      return f'[[{text}|{wiki_page}]]'
                  elif path in file_to_wiki:
                      wiki_page = file_to_wiki[path]
                      return f'[[{text}|{wiki_page}]]'
                  else:
                      # Keep original link if no mapping found
                      return match.group(0)
              
              # Pattern to match [text](path.md) links
              pattern = r'\[([^\]]+)\]\(([^)]+\.md)\)'
              return re.sub(pattern, replace_link, content)
          
          # Process all markdown files in wiki directory
          for filepath in glob.glob('wiki/**/*.md', recursive=True):
              print(f"Processing {filepath}")
              with open(filepath, 'r', encoding='utf-8') as f:
                  content = f.read()
              
              converted = convert_links(content)
              
              with open(filepath, 'w', encoding='utf-8') as f:
                  f.write(converted)
          
          print("Link conversion completed")
          PYTHON_EOF
          
          # Run the conversion
          python3 convert-links.py
          rm convert-links.py
          
          # Create wiki sidebar navigation
          cat > wiki/_Sidebar.md << 'EOF'
          ## 📖 Dokumentace
          
          ### 📋 Základní informace
          - [[Úvod|Home]]
          - [[Instalace a setup|getting-started-installation]]
          
          ### 🏗️ Architektura
          - [[CMS architektura|architecture-cms]]
          
          ### 🎨 Frontend
          - [[React micro-apps|frontend-architecture]]
          - [[Build systém|frontend-build-system]]
          - [[Styling|frontend-styling]]
          
          ### 🔌 API
          - [[API přehled|api-README]]
          
          ### 🔄 Migrace
          - [[Z WordPress|migration-wordpress]]
          
          ### 👥 Uživatelská nápověda
          - [[Nápověda|user-docs-README]]
          - [[První přihlášení|user-docs-getting-started-first-login]]
          EOF
          
      - name: Commit and push to wiki
        run: |
          cd wiki/
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git commit -m "🤖 Auto-sync documentation from main branch"
          
          # Try to push with better error handling
          if ! git push; then
            echo "❌ Failed to push to wiki repository"
            echo "This usually means the WIKI_TOKEN secret is missing or has insufficient permissions."
            echo ""
            echo "To fix this:"
            echo "1. Go to GitHub Settings → Developer settings → Personal access tokens"
            echo "2. Create a new token with 'repo' and 'workflow' permissions"
            echo "3. Add it as WIKI_TOKEN secret in repository settings"
            echo ""
            echo "Current token being used: ${{ secrets.WIKI_TOKEN && 'WIKI_TOKEN (custom)' || 'GITHUB_TOKEN (default)' }}"
            exit 1
          fi
          
          echo "✅ Wiki synchronized successfully"